"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// lib/experimental/index.ts
var experimental_exports = {};
__export(experimental_exports, {
  poTokenExtraction: () => poTokenExtraction
});
module.exports = __toCommonJS(experimental_exports);

// lib/experimental/PoToken/PoToken.ts
var import_bgutils_js = require("bgutils-js");
var import_happy_dom = require("happy-dom");
var HARD_CODED_REQ_KEY = "O43z0dpjhgX20SCx4KAo";
async function poTokenExtraction(innertube) {
  const visitorData = innertube.session.context.client.visitorData;
  if (!visitorData)
    throw new Error("Innertube instance does not contain visitor data");
  const window = new import_happy_dom.Window();
  Object.assign(globalThis, {
    document: window.document,
    window
  });
  const bgConfig = {
    // excuse my variable naming
    fetch: (i, a) => fetch(i, a),
    globalObj: globalThis,
    identifier: visitorData,
    requestKey: HARD_CODED_REQ_KEY
  };
  const challenge = await import_bgutils_js.BG.Challenge.create(bgConfig);
  if (!challenge)
    throw new Error("Unable to retrieve challenge data from botguard");
  const jsInter = challenge.interpreterJavascript.privateDoNotAccessOrElseSafeScriptWrappedValue;
  if (jsInter) {
    new Function(jsInter)();
  } else throw new Error("Unable to load botguard's VM");
  return import_bgutils_js.BG.PoToken.generate({
    bgConfig,
    program: challenge.program,
    globalName: challenge.globalName
  });
}

// lib/experimental/index.ts
console.log(
  "\x1B[2;33mYou are using discord-player-youtubei's experimental features. Expect bugs.\x1B[0m"
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  poTokenExtraction
});
